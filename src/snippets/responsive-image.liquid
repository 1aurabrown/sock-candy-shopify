{%- comment -%}
    Creates a style tag and it restricts an image from growing larger than its max resolution.

    Dependencies:
    - Lazysizes plugin (https://github.com/aFarkas/lazysizes) which enable responsive image with faster load time and better performance.
    - Lazysizes Responsive Images as a Service (https://github.com/aFarkas/lazysizes/tree/gh-pages/plugins/rias) To load the correct image size with our CDN
    - Lazysizes Object Fit (https://github.com/aFarkas/lazysizes/tree/gh-pages/plugins/object-fit) To calculate correct image size for contrained image.

    Accepts:
    placeholder_key: name of fallback svg for missing images (default: 'image')
    fit: object-fit

    crop_aspect_ratio: Aspect ratio used for cropping the image via Shopify image filters. If set,
    image source template will use { height } placeholder and provide a data-aspect-ratio attribute to lazysizes.

    inline_aspect_ratio: If true, we set the image container's bottom padding inline based on image's native size or the provided crop_aspect_ratio. Useful if mobile & desktop use the same (or no) aspect ratio.

    If false, container bottom padding should be set by providing one or more classes, via {{ wrapper_class }}, that are styled correctly for the desired aspect ratio(s). Useful if you would like to style change the aspect ratio with breakpoints. (See helpers.css)

    wrapper_class: classes to be applied to image wrapper

    image_class: classes to be applied to <img>
{%- endcomment -%}

{%- comment -%} Added incremental number to avoid conflict styling code when the same images are using this snippet {%- endcomment -%}
{% assign placeholder_key = placeholder_key | default: 'image' %}
{%- capture responsive_image_counter %}{% increment responsive_image_counter %}{% endcapture -%}

{% assign aspect_ratio_fallback = crop_aspect_ratio | default: image.aspect_ratio | default: 1 %}

{%- assign img_url_placeholder = image | img_url: '1x1' -%}
{% if crop_aspect_ratio != blank %}
  {%- assign img_url_template = img_url_placeholder | crop: 'center' | replace: '_1x1.', '_{width}x{height}.' -%}
{% else %}
  {%- assign img_url_template = img_url_placeholder | replace: '_1x1.', '_{width}x.' -%}
{% endif %}

{%- comment -%} Limit image widths to valid options based on image.width {%- endcomment -%}
{%- assign image_widths = '180,360,540,720,900,1080,1296,1512,1728,1944,2160,2376,2592,2808,3024' | split: ',' -%}
{%- capture image_widths -%}
  {%- for width in image_widths -%}
    {%- comment -%} Check if image width is less or equal to width {%- endcomment -%}
    {%- assign width_num = width | plus: 0 | round -%}
    {%- if image.width >= width_num -%}{{ width_num }},{%- endif -%}
  {%- endfor -%}
  {{ image.width }}
{%- endcapture -%}
{%- assign image_widths = image_widths | strip -%}

{% assign default_width = default_width | default: 500 %}
{% assign img_url_string = default_width | append: 'x' %}

{% if crop_aspect_ratio %}
  {% assign default_height = default_width | times: crop_aspect_ratio | round %}
  {% assign img_url_string = img_url_string | append: default_height %}
  {% assign default_image_url = image | img_url: img_url_string | crop: 'center' %}
{% else %}
  {% assign default_image_url = image | img_url: img_url_string %}
{% endif %}

{%- capture wrapper_styles -%}
{%- if inline_aspect_ratio -%}; padding-top: {{ 100 | divided_by: aspect_ratio_fallback }}%{%- endif -%}
{%- endcapture -%}

{% comment %} data-aspectratio: aspect ratio of image file {% endcomment %}
{% comment %} visual aspect ratio shoud be set via image wrapper's padding-bottom {% endcomment %}
<div
  id="ImageWrapper-{{ image.id }}-{{ responsive_image_counter }}"
  data-image-id="{{ image.id }}"
  class="overflow-hidden relative h-0 p-0 {{ wrapper_class }} "
  style="{{ wrapper_styles }}">
  {% if image.src != blank %}
    <img id="Image-{{ image.id }}-{{ responsive_image_counter }}"
      class="lazyload absolute w-full h-full inset-0 object-{{ fit | default: 'cover' }} {{ image_class }}"
      style="{{ img_styles }}"
      src="{{ default_image_url }}"
      data-src="{{ img_url_template }}"
      data-widths="[{{ image_widths }}]"
      data-aspectratio="{{ crop_aspect_ratio | default: image.aspect_ratio }}"
      data-sizes="auto"
      tabindex="-1"
      alt="{{ alt | default: image.alt | escape }}"
      {{ image_attributes }}
    >
  {% else %}
    <img class="bg-soft-blue absolute w-full h-full inset-0 object-{{ fit | default: 'cover' }} {{ image_class }}"
    style="{{ img_styles }}"
    src="data:image/svg+xml;utf8,{{ placeholder_key | placeholder_svg_tag  | escape }}" />
  {% endif %}
</div>

{% assign placeholder_key = blank %}
{% assign alt = blank %}
{% assign inline_aspect_rtio = blank %}
{% assign crop_aspect_ratio = blank %}
{% assign image_class = blank %}
{% assign wrapper_class = blank %}
{% assign image = blank %}
{% assign fit = blank %}
